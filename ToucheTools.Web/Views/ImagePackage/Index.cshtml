@using ToucheTools.Web.Services
@inject IImagePackageStorageService _packageStorageService;
@{
    string packageId = "";
    if (Context.Request.Query.TryGetValue("package", out var val))
    {
        packageId = val[0];
    }
    var loggedIn = false;
    Dictionary<string, string> routeData = new Dictionary<string, string>();
    ImagePackage? package = null;
    if (!string.IsNullOrEmpty(packageId) && _packageStorageService.TryGetPackage(packageId, out package))
    {
        loggedIn = true;
        routeData["package"] = packageId;
    }
}

<div>
    <h1 class="display-4">What is this?</h1>
    <p>This page allows you to upload a background image as the base, and a series of game images (icons, sprites)
        to come up with a common palette of 255 colours as per the game requirements, then process the images to 
        turn them into indexed images ready to upload to the regular tool.
    </p>
    <p>This is a free, open-source project. Please see the <a href="https://github.com/RedMike/touche-tools">repository here</a>.</p>
</div>

@if (loggedIn)
{
    <div>
        <h1 class="display-4">Potential Palette</h1>
        <p>This is the palette as currently planned. TODO: info about palette</p>
        <img src="@Url.Action("GetPalette", routeData)" alt="palette"/>
        <a href="@Url.Action("DownloadPalette", routeData)">Download Palette</a>
    </div>
}

<div>
    <h1 class="display-4">Upload Background</h1>
    <p>This image will be used as the base for the palette (using up to over 190 of the colours in the palette).</p>
    <div class="row mb-2">
        <div class="col-6">
            <img src="@Url.Action("GetOriginalBackground", routeData)" alt="original background"/>
        </div>
        <div class="col-6">
            <img src="@Url.Action("GetProcessedBackground", routeData)" alt="processed background"/>
        </div>
    </div>
    <form asp-area="" asp-controller="ImagePackage" asp-action="UploadBackground" asp-all-route-data="routeData" enctype="multipart/form-data" method="post">
        <div class="row mb-3">
            <div class="col-8">
                <input class="form-control" type="file" id="bgFile" name="file">
                <span class="text-danger"></span>
            </div>
            <div class="d-grid col-4">
                <button type="submit" class="btn btn-primary">Upload</button>
            </div>
        </div>
    </form>
</div>

<div>
    <h1 class="display-4">Upload Game Image</h1>
    <p>This image will only use a limited portion of the palette (up to ~60 colours).</p>
    @if (package != null)
    {
        @foreach (var pair in package.OriginalGameImages)
        {
            var imageRouteData = new Dictionary<string, string>(routeData);
            imageRouteData["imageId"] = pair.Key;
            <div class="row mb-2">
                <div class="col-6">
                    <img src="@Url.Action("GetOriginalGameImage", imageRouteData)" alt="original game image @pair.Key"/>
                </div>
                <div class="col-6">
                    <img src="@Url.Action("GetProcessedGameImage", imageRouteData)" alt="processed game image @pair.Key"/>
                </div>
            </div>
        }
    }
    <form asp-area="" asp-controller="ImagePackage" asp-action="UploadGameImage" asp-all-route-data="routeData" enctype="multipart/form-data" method="post">
        <div class="row mb-1">
            <div class="col-6">
                <input class="form-control" type="text" id="spriteWidth" name="spriteWidth" placeholder="Sprite width (empty if not sprite)">
                <span class="text-danger"></span>
            </div>
            <div class="col-6">
                <input class="form-control" type="text" id="spriteHeight" name="spriteHeight" placeholder="Sprite height (empty if not sprite)">
                <span class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-8">
                <input class="form-control" type="file" id="gameFile" name="file">
                <span class="text-danger"></span>
            </div>
            <div class="d-grid col-4">
                <button type="submit" class="btn btn-primary">Upload</button>
            </div>
        </div>
    </form>
</div>