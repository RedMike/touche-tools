@using ToucheTools.Web.Services
@model ToucheTools.Models.DatabaseModel
@inject IModelStorageService _modelStorageService
@{
    string sessionId = "";
    if (Context.Request.Query.TryGetValue("id", out var val))
    {
        sessionId = val[0];
    }
    bool loggedIn = false;
    ModelContainer? container = null;
    string initialFilename = "";
    Dictionary<string, string> routeData = new Dictionary<string, string>();
    if (!string.IsNullOrEmpty(sessionId))
    {
        loggedIn = _modelStorageService.TryGetModels(sessionId, out container);
        if (!loggedIn)
        {
            sessionId = "";
        }
        else
        {
            initialFilename = container.InitialFilename;
            routeData["id"] = sessionId;
        }
    }
}

@if (!loggedIn)
{
    <script>
        window.location.href = "/";
    </script>
    return;
}

<div>
    <h1 class="display-4">Icons</h1>
    <p>The following is the list of existing icons in the uploaded file:</p>
    <div class="row">
        @foreach (var pair in Model.Icons)
        {
            var iconRouteData = new Dictionary<string, string>(routeData);
            iconRouteData.Add("icon", pair.Key.ToString());
            <div class="col-2">
                <div class="ratio ratio-1x1 mb-2">
                    <div class="card bg-dark overflow-hidden">
                        <div class="card-header bg-light">
                            Icon @pair.Key
                        </div>
                        <div class="card-img h-100 d-flex flex-column justify-content-center">
                            <div class="w-100 mh-100 overflow-hidden">
                                <img src="@Url.Action("GetIconImage", new { id = sessionId, icon = pair.Key, palette = container.DatabaseModel.Palettes.Keys.First() })" class="w-100"/>
                            </div>
                        </div>
                        <div class="card-img-overlay">
                            <a asp-area="" asp-controller="Home" asp-action="GetIcon" asp-all-route-data="iconRouteData" class="stretched-link"></a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    @if (Model.FailedIcons.Count > 0)
    {
        <ul>
            @foreach (var pair in Model.FailedIcons)
            {
                <li>
                    <span class="text-danger">@pair.Key - Failed: @pair.Value</span>
                </li>
            }
        </ul>
    }
</div>